@namespace Project.Web.Shared.Components
@typeparam TModel
@inherits BasicComponent
@{
    int index = 0;
}
<div>
    @foreach (var item in Condition.Children)
    {
        <Group Item="item" Columns="Columns" UI="@UI" Index="index"></Group>
        index++;
    }
</div>

@code {
    [Parameter, NotNull] public ConditionUnit? Condition { get; set; }
    [Parameter, NotNull] public EventCallback<ConditionUnit> ConditionChanged { get; set; }
    private List<ColumnInfo>? Columns;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (Condition == null || Condition.Children.Count == 0)
        {
            Condition = new ConditionUnit();
            Condition.Children.Add(new ConditionUnit());
        }
        Columns = typeof(TModel).GenerateColumns();
    }
}
