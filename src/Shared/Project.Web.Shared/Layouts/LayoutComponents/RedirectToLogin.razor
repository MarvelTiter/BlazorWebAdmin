@inject IOptionsMonitor<Token> Token
@code {

    [Inject, NotNull] NavigationManager? Nav { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        try
        {
            @*_ = MsgSrv.Error("登录过期！请重新登录！");*@
            var redirect = Nav.ToBaseRelativePath(Nav.Uri);
            Nav.NavigateTo($"/account/login?Redirect={HttpUtility.UrlEncode(redirect)}", true);
        }
        catch
        {

        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        // @*_ = MsgSrv.Error("登录过期！请重新登录！");*@
        // var redirect = Navigator.ToBaseRelativePath(Navigator.Uri);
        // Navigator.NavigateTo($"/login?Redirect={HttpUtility.UrlEncode(redirect)}", true);
        // Navigator.NavigateTo("/login", true);
    }
}
